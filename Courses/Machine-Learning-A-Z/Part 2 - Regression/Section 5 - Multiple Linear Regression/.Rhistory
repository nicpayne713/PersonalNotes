library(MASS)
library(ISLR)
install.packages("ISLR")
library(ISLR)
library(Auto)
Auto
attach(Auto)
lm.fit = lm(mpg ~ horsepower)
plot(lm.fit, x = horsepower, y = mph)
plot(lm.fit, x = horsepower, y = mpg)
summary(lm.fit)
plot(lm.fit)
summary(lm.fit)
plot(lm.fit)
plot(x = horsepower, y = mpg, data = Auto)
abline(lm.fit)
confint(lm.fit)
warnings(())
warnings(
warnings()
confint(lm.fit)
confint(lm.fit)
predict(lm.fit, data.frame(mpg = c(98), interval = "confidence"))
predict(lm.fit, data.frame(horsepower = c(98), interval = "confidence"))
predict(lm.fit, data.frame(horsepower = c(98), interval = "prediction"))
par(mfrow = c(2,2))
plot(lm.fit)
clear()
ls(erase(list()))
ls()
remove(ls())
plot(Auto)
names(Auto)
names(Auto)
str(Auto)
cor(Auto[,-1],Auto[,-1])
cor(Auto[,1:8],Auto[,1:8])
lm.fit = lm(mph ~ names(Auto[,1:8]), data = Auto)
lm.fit = lm(mpg ~ names(Auto[,1:8]), data = Auto)
lm.fit = lm(mpg ~.-name), data = Auto)
lm.fit = lm(mpg ~. -name), data = Auto)
lm.fit = lm(mpg ~. -name, data = Auto)
summary(lm.fit)
par(mfrow = c(2,2))
plot(lm.fit)
lm.fit2 = lm(mpg ~ cylinders*displacement + displacement*weights, data = Auto)
lm.fit2 = lm(mpg ~ cylinders*displacement + displacement*weight, data = Auto)
lm.fit3 = lm(mpg ~ cylinders*displacement:horsepower)
par(mfrow = c(2,2))
plot(lm.fit2)
par(mfrow = c(2,2))
plot(lm.fit3)
summary(lm.fit2)
summary(lm.fit3)
detach(Auto)
attach(Carseats)
lm.fit = lm(Sales ~ Price + Urban + US, data = Carseats)
summary(lm.fit)
summary(Carseats)
library(MASS)
library(ISLR)
arrach(Auto)
attach(Auto)
plot(Auto)
cor(Auto[,1:8], Auto[,1:8])
lm.fit = lm(mpg~. -name, data = Auto)
summary(lm.fit)
par(mfrow = c(2,2))
plot(lm.fit)
lm.fit2 = lm(mpg ~ cylinders*displacement + weight*displacement, data = Auto)
summary(lm.fit2)
lm.fitln = lm(mpg ~ .-names, data = log(Auto))
lm.fitln = lm(mpg ~ .-name, data = log(Auto))
Auto.log = log(Auto)
Auto.log = log(Auto[,1:8])
Auto.sq = (Auto[,1:8])^0.5
Auto.p = (Auto[,1:8])^2
lm.fitlog = lm(mpg ~ ., data - Auto.log)
lm.fitlog = lm(mpg ~ ., data = Auto.log)
lm.fitsq = lm(mpg ~ ., data = Auto.sq)
Auto.sq = data.frame((Auto[,1:8])^0.5)
Auto.p = data.frame((Auto[,1:8])^2)
lm.fitsq = lm(mpg ~ ., data = Auto.sq)
lm.fitp = lm(mpg ~., data = Auto.p)
summary(lm.fitlog)
summary(lm.fitsq)
summary(lm.fitp)
setwd("~/Machine-Learning-A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
